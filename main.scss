@use "./sass/layout/global-rules";

@use "./sass/pages/contact";

@use "./sass/varailble/varailble" as *;
.header {
  background-color: $alt-color;
}

.footer {
  $alt-color: yellow !global;
  background-color: $alt-color;
}

.under {
  color: $main-color;
}

.father {
  color: red;
  .son {
    background-color: black;
    .grand-son {
      font-size: 20px;
    }
  }
}
// nesting  & parent element

.parent {
  > .child {
    font-size: 20px;
  }
  .son {
    color: red;
  }
}
.parent2 {
  > {
    .ele1 {
      font-size: 20px;
    }
    .ele2 {
      color: black;
    }
  }
  + {
    p {
      background-color: green;
    }
    span {
      background-color: red;
    }
  }
  .not-direct {
    box-sizing: border-box;
  }
}

.box {
  .green {
    color: green;
  }
  &.red {
    font-size: 20px;
  }
  &:hover {
    color: red;
  }
  &::before {
    content: "";
    width: 20px;
    height: 20px;
    position: absolute;
  }
}

// property declaration and place holder

.box2 {
  font : {
    size: 2px;
    weight: bold;
  }
  margin: auto {
    top: 10px;
    bottom: 20px;
  }
  border: 1px solid red {
    right: transparent;
    bottom: 8px solid black;
  }
}

%ads {
  margin: 20px;

  background-color: rgb(255, 137, 137);
  padding: 20px;
}

.article {
  color: yellow;
  box-shadow: brown;
}
.hany {
  @extend %ads;
  @extend .article;
  color: green;
  font-weight: bold;
}

// control flow => if, else

$theme: "light";

.page {
  @if $theme == light {
    background-color: white;
    color: #444;
  } @else {
    background-color: #444;
    color: white;
  }
}

$rounded: true;

.rouded {
  @extend .footer;
  border-radius: if($rounded, 5px, null);
}

$direction: "top";

.arrow-div {
  @extend %ads;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 300px;
  height: 300px;
  position: relative;
  margin: 60px auto;
  &::after {
    content: "";
    position: absolute;
    @if ($direction== "top") {
      top: -19px;
      left: 50%;
      transform: translateX(-50%);
      border: 10px solid transparent {
        bottom-color: red;
      }
    } @else {
      bottom: -19px;
      left: 50%;
      transform: translateX(-50%);
      border: 10px solid transparent {
        top-color: red;
      }
    }
  }
}
